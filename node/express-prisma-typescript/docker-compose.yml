services:
  db:
    image: postgres:alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 1s
      timeout: 1s
      retries: 15
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '5050:80'
    depends_on:
      - db

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: server
    platform: linux/amd64
    restart: always
    tty: true
    environment:
      - DATABASE_URL=${DOCKER_DATABASE_URL}
      - PORT=8080
    env_file:
      - .envrc
    ports:
      - '8080:8080'
    volumes: # if there's any new files containing sources, add them as volumes
      - ./src:/app/src
      - ./prisma:/app/prisma
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
volumes:
  db-data:
